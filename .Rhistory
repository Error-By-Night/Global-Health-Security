barchart
library(ggplot2)
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("data/Top-10-GHS-Index-2021.csv")
barchart
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("data/Top-10-GHS-Index-2021.csv")
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("./data/Top-10-GHS-Index-2021.csv")
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("data/Top-10-GHS-Index-2021.csv")
# create a bar chart for the top 10 index scores in the year 2021
barchart <- ggplot(top_10_scores_2021, aes(x = Country, y = OVERALL.SCORE)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=OVERALL.SCORE), vjust = 1.6, color = "white", size = 3.5) +
labs(
x = "Countries",
y = "Index Score",
title = "Top 10 Countries by Index Score in 2021"
)
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("data/Top-10-GHS-Index-2021.csv")
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("./data/Top-10-GHS-Index-2021.csv")
library(plotly)
chart
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("./data/Top-10-GHS-Index-2021.csv")
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("data/Top-10-GHS-Index-2021.csv")
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("../Top-10-GHS-Index-2021.csv")
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("../data/Top-10-GHS-Index-2021.csv")
# create a bar chart for the top 10 index scores in the year 2021
barchart <- ggplot(top_10_scores_2021, aes(x = Country, y = OVERALL.SCORE)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=OVERALL.SCORE), vjust = 1.6, color = "white", size = 3.5) +
labs(
x = "Countries",
y = "Index Score",
title = "Top 10 Countries by Index Score in 2021"
)
ggplotly(barchart)
# pass in dataset needed for bar chart
top_10_scores_2021 <- read.csv("../data/Top-10-GHS-Index-2021.csv")
# create a bar chart for the top 10 index scores in the year 2021
barchart <- ggplot(top_10_scores_2021, aes(x = Country, y = OVERALL.SCORE)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=OVERALL.SCORE), vjust = 1.6, color = "black", size = 3.5) +
labs(
x = "Countries",
y = "Index Score",
title = "Top 10 Countries by Index Score in 2021"
)
ggplotly(barchart)
# pass in dataset needed for bar chart
top_10_scores_2019 <- read.csv("data/Top-10-GHS-Index-2019.csv")
# pass in dataset needed for bar chart
top_10_scores_2019 <- read.csv("../data/Top-10-GHS-Index-2019.csv")
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "FF0000", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "BC5090", "FF6361"))
piechart
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "FF0000", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "BC5090", "FF6361"))
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "FF0000", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "BC5090", "FF6361"))
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "FF0000", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "BC5090", "FF6361"))
piechart
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "red", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "BC5090", "FF6361"))
piechart
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "red", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "pink", "FF6361"))
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 10,
col = c("#52D726", "#FFEC00", "#FF7300", "red", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "pink", "violet"))
piechart
# create a histogram for the top 10 index scores in the year 2019
piechart <- pie(top_10_scores_2019$OVERALL.SCORE, labels = top_10_scores_2019$Country, radius = 1,
col = c("#52D726", "#FFEC00", "#FF7300", "red", "#007ED6", "#7CDDDD", "#003F5C",
"#58508D", "pink", "violet"))
piechart
# pass in sorted csv file with selected countries
sorted_data <- read.csv("data/sorted-GHS-Index-2019.csv")
# pass in sorted csv file with selected countries
sorted_data <- read.csv("../data/sorted-GHS-Index-2019.csv")
# plot the dataframe as a scatterplot of values
scatterplot <- ggplot(sorted_data, aes(x = Country, y = OVERALL.SCORE)) +
geom_point() +
geom_text(label = rownames(sorted_data))
scatterplot
# plot the dataframe as a scatterplot of values
scatterplot <- ggplot(sorted_data, aes(y = OVERALL.SCORE)) +
geom_point() +
geom_text(label = rownames(sorted_data))
scatterplot
Country
Country
Country
# pass in sorted csv file with selected countries
sorted_data <- read.csv("../data/sorted-GHS-Index-2019.csv")
# plot the dataframe as a scatterplot of values
scatterplot <- ggplot(sorted_data, aes(x = Country, y = OVERALL.SCORE)) +
geom_point() +
geom_text(label = rownames(sorted_data))
scatterplot
shiny::runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
library(dplyr)
source("./scripts/table.R")
source("../scripts/table.R")
source("../scripts/table.R")
GHSIndex <- read.csv("data/GHS-Index.csv")
GHSIndex <- read.csv("../data/GHS-Index.csv")
top_10_scores_2021 <- read.csv("data/Top-10-GHS-Index-2021.csv")
GHSIndex <- read.csv("../data/GHS-Index.csv")
top_10_scores_2021 <- read.csv("../data/Top-10-GHS-Index-2021.csv")
library(dplyr)
source("../scripts/table.R")
source("../scripts/top_10_scores_2021_barchart.R")
GHS <- read.csv("GHSIndex.csv")
GHS <- read.csv("data/GHSIndex.csv")
GHS <- read.csv("../data/GHSIndex.csv")
GHS <- read.csv("../data/GHS-Index.csv")
source("../scripts/table.R")
source("../scripts/top_10_scores_2021_barchart.R")
runApp('~/GitHub/final-project-Error-By-Night')
?sidebarLayout
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
install.packages("e1071")
library(e1071)
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
runApp('~/GitHub/final-project-Error-By-Night')
